# Generated by Neurodocker version 0.5.1-dev
# Timestamp: 2019-09-20 00:18:57 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

FROM ubuntu:xenial

ARG DEBIAN_FRONTEND="noninteractive"

ENV ND_ENTRYPOINT="/neurodocker/startup.sh" \
    LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN printf '#!/bin/bash\nls -la' > /usr/bin/ll

RUN chmod +x /usr/bin/ll

COPY ["globalMountPointList.txt", "/globalMountPointList.txt"]

RUN mkdir `cat /globalMountPointList.txt`

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           wget \
           libc6 \
           libstdc++6 \
           imagemagick \
           perl \
           octave \
           bc \
           libxi6 \
           libxmu6 \
           libjpeg8 \
           libgl1-mesa-glx \
           libglu1-mesa \
           ed \
           libxml2-dev \
           libcurl4-openssl-dev \
           libssl-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /

RUN wget http://packages.bic.mni.mcgill.ca/minc-toolkit/Debian/minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb

RUN dpkg -i /minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb

RUN rm /minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb

RUN cp /opt/minc/1.9.16/bin/bestlinreg.pl /opt/minc/1.9.16/bin/bestlinreg

RUN test "$(getent passwd neuro)" || useradd --no-user-group --create-home --shell /bin/bash neuro
USER neuro

ENV DEPLOY_PATH="/opt/minc/1.9.16/bin/"

ENV MINC_TOOLKIT="/opt/minc/1.9.16/"

ENV MINC_TOOLKIT_VERSION="1.9.16-20180117"

ENV PATH="/opt/minc/1.9.16/bin:/opt/minc/1.9.16/pipeline:/home/steffen/bin:/home/steffen/.local/bin:/qrisvolume/dcm2niix/build/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/qrisvolume/miniconda3/bin"

ENV PERL5LIB="/opt/minc/1.9.16/perl:/opt/minc/1.9.16/pipeline:"

ENV LD_LIBRARY_PATH="/opt/minc/1.9.16/lib:/opt/minc/1.9.16/lib/InsightToolkit:"

ENV MNI_DATAPATH="/opt/minc/1.9.16/../share"

ENV MINC_FORCE_V2="1"

ENV MINC_COMPRESS="4"

ENV VOLUME_CACHE_THRESHOLD="-1"

ENV MANPATH="/opt/minc/1.9.16/man:"

ENV ANTSPATH="/opt/minc/1.9.16/bin/"

RUN echo '{ \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "ubuntu:xenial" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "printf '"'"'#!/bin/bash\\\nls -la'"'"' > /usr/bin/ll" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "chmod +x /usr/bin/ll" \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "globalMountPointList.txt", \
    \n        "/globalMountPointList.txt" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir `cat /globalMountPointList.txt`" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "wget", \
    \n        "libc6", \
    \n        "libstdc++6", \
    \n        "imagemagick", \
    \n        "perl", \
    \n        "octave", \
    \n        "bc", \
    \n        "libxi6", \
    \n        "libxmu6", \
    \n        "libjpeg8", \
    \n        "libgl1-mesa-glx", \
    \n        "libglu1-mesa", \
    \n        "ed", \
    \n        "libxml2-dev", \
    \n        "libcurl4-openssl-dev", \
    \n        "libssl-dev" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "wget http://packages.bic.mni.mcgill.ca/minc-toolkit/Debian/minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "dpkg -i /minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "rm /minc-toolkit-1.9.16-20180117-Ubuntu_16.04-x86_64.deb" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "cp /opt/minc/1.9.16/bin/bestlinreg.pl /opt/minc/1.9.16/bin/bestlinreg" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "DEPLOY_PATH": "/opt/minc/1.9.16/bin/" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MINC_TOOLKIT": "/opt/minc/1.9.16/" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MINC_TOOLKIT_VERSION": "1.9.16-20180117" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "PATH": "/opt/minc/1.9.16/bin:/opt/minc/1.9.16/pipeline:/home/steffen/bin:/home/steffen/.local/bin:/qrisvolume/dcm2niix/build/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/qrisvolume/miniconda3/bin" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "PERL5LIB": "/opt/minc/1.9.16/perl:/opt/minc/1.9.16/pipeline:" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "LD_LIBRARY_PATH": "/opt/minc/1.9.16/lib:/opt/minc/1.9.16/lib/InsightToolkit:" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MNI_DATAPATH": "/opt/minc/1.9.16/../share" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MINC_FORCE_V2": "1" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MINC_COMPRESS": "4" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "VOLUME_CACHE_THRESHOLD": "-1" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "MANPATH": "/opt/minc/1.9.16/man:" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "ANTSPATH": "/opt/minc/1.9.16/bin/" \
    \n      } \
    \n    ] \
    \n  ], \
    \n  "pkg_manager": "apt" \
    \n}' > /neurodocker/neurodocker_specs.json
