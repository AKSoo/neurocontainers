# Generated by: Neurodocker version 0+unknown
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2020/05/13 23:48:22 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: ubuntu:16.04

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
chmod -R 777 /neurodocker && chmod a+s /neurodocker

printf '#!/bin/bash\nls -la' > /usr/bin/ll

chmod +x /usr/bin/ll

mkdir /afm01 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    g++ \
    gcc \
    git \
    libeigen3-dev \
    libfftw3-dev \
    libglu1-mesa \
    libpng12-dev \
    libqt5core5a \
    libqt5gui5 \
    libqt5opengl5 \
    libqt5opengl5-dev \
    libqt5svg5-dev \
    libtiff5 \
    libtiff5-dev \
    make \
    mesa-common-dev \
    python \
    python-numpy \
    qt5-default \
    wget \
    zlib1g-dev
apt-get clean
rm -rf /var/lib/apt/lists/*
mkdir -p /opt/mrtrix3-3.0.0
git clone https://github.com/MRtrix3/mrtrix3.git /opt/mrtrix3-3.0.0
cd /opt/mrtrix3-3.0.0
git checkout 3.0.0
./configure
echo "Compiling MRtrix3 ..."
./build

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libopenblas-base \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    sudo \
    wget
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl
curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.3-centos6_64.tar.gz \
| tar -xz -C /opt/fsl --strip-components 1 
sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT
sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT
sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT
sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
echo "Installing FSL conda environment ..."
bash /opt/fsl/etc/fslconf/fslpython_install.sh -f /opt/fsl


test "$(getent passwd neuro)" || useradd --no-user-group --create-home --shell /bin/bash neuro
su - neuro

echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "ubuntu:16.04"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "run",
\n      "printf '"'"'#!/bin/bash\\\nls -la'"'"' > /usr/bin/ll"
\n    ],
\n    [
\n      "run",
\n      "chmod +x /usr/bin/ll"
\n    ],
\n    [
\n      "run",
\n      "mkdir /afm01 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch"
\n    ],
\n    [
\n      "mrtrix3",
\n      {
\n        "version": "3.0.0",
\n        "method": "source"
\n      }
\n    ],
\n    [
\n      "fsl",
\n      {
\n        "version": "6.0.3",
\n        "install_path": "/opt/fsl"
\n      }
\n    ],
\n    [
\n      "env",
\n      {
\n        "DEPLOY_PATH": "/opt/mrtrix3-3.0.0/bin/"
\n      }
\n    ],
\n    [
\n      "user",
\n      "neuro"
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export PATH="/opt/mrtrix3-3.0.0/bin:$PATH"
export FSLDIR="/opt/fsl"
export PATH="/opt/fsl/bin:$PATH"
export FSLOUTPUTTYPE="NIFTI_GZ"
export FSLMULTIFILEQUIT="TRUE"
export FSLTCLSH="/opt/fsl/bin/fsltclsh"
export FSLWISH="/opt/fsl/bin/fslwish"
export FSLLOCKDIR=""
export FSLMACHINELIST=""
export FSLREMOTECALL=""
export FSLGECUDAQ="cuda.q"
export DEPLOY_PATH="/opt/mrtrix3-3.0.0/bin/"

%runscript
/neurodocker/startup.sh "$@"
