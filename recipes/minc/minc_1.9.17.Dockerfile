# Generated by: Neurodocker version 0+unknown
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2020/06/30 16:43:44 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

FROM ubuntu:18.04

USER root

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN mkdir /afm01 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch

ENV MINC_TOOLKIT="/opt/minc-1.9.17" \
    MINC_TOOLKIT_VERSION="/opt/minc-1.9.17" \
    PATH="/opt/minc-1.9.17/bin:/opt/minc-1.9.17/volgenmodel-nipype/extra-scripts:/opt/minc-1.9.17/pipeline:$PATH" \
    PERL5LIB="/opt/minc-1.9.17/perl:/opt/minc-1.9.17/pipeline:$PERL5LIB" \
    LD_LIBRARY_PATH="/opt/minc-1.9.17/lib:/opt/minc-1.9.17/lib/InsightToolkit:$LD_LIBRARY_PATH" \
    MNI_DATAPATH="/opt/minc-1.9.17/share" \
    MINC_FORCE_V2="1" \
    MINC_COMPRESS="4" \
    VOLUME_CACHE_THRESHOLD="-1" \
    MANPATH="/opt/minc-1.9.17/man:$MANPATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           binutils \
           ed \
           gdebi-core \
           git \
           imagemagick \
           libc6 \
           libgl1-mesa-dev \
           libgl1-mesa-glx \
           libglu1-mesa \
           libgomp1 \
           libice6 \
           libjpeg62 \
           libsm6 \
           libstdc++6 \
           libx11-6 \
           libxext6 \
           libxi6 \
           libxmu6 \
           octave \
           perl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading MINC, BEASTLIB, and MODELS..." \
    && cd / \
    && curl https://packages.bic.mni.mcgill.ca/minc-toolkit/Debian/minc-toolkit-1.9.17-20190313-Ubuntu_18.04-x86_64.deb -o minc.deb && ar p minc.deb data.tar.gz | tar zx && rm minc.deb \
    && ln -s /opt/minc/1.9.17 /opt/minc-1.9.17 \
    && git clone https://github.com/CAIsr/volgenmodel-nipype.git /opt/minc-1.9.17/volgenmodel-nipype/ \
    && curl -fsSL --retry 5 http://packages.bic.mni.mcgill.ca/tgz/beast-library-1.1.tar.gz \
    | tar -xz -C /opt/minc-1.9.17/share \
    && curl -fsSL --retry 5 -o /tmp/mni_90a.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09a_minc2.zip \
    && unzip /tmp/mni_90a.zip -d /opt/minc-1.9.17/share/icbm152_model_09a \
    && curl -fsSL --retry 5 -o /tmp/mni_90c.zip http://www.bic.mni.mcgill.ca/~vfonov/icbm/2009/mni_icbm152_nlin_sym_09c_minc2.zip \
    && unzip /tmp/mni_90c.zip -d /opt/minc-1.9.17/share/icbm152_model_09c \
    && rm -rf /tmp/mni*

ENV DEPLOY_PATH="/opt/minc-1.9.17/bin/:/opt/minc-1.9.17/volgenmodel-nipype/extra-scripts:/opt/minc-1.9.17/pipeline"

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "ubuntu:18.04" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "mkdir /afm01 /90days /30days /QRISdata /RDS /data /short /proc_temp /TMPDIR /nvme /local /gpfs1 /working /winmounts /state /autofs /cluster /local_mount /scratch /clusterdata /nvmescratch" \
    \n    ], \
    \n    [ \
    \n      "minc", \
    \n      { \
    \n        "version": "1.9.17" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "DEPLOY_PATH": "/opt/minc-1.9.17/bin/:/opt/minc-1.9.17/volgenmodel-nipype/extra-scripts:/opt/minc-1.9.17/pipeline" \
    \n      } \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
